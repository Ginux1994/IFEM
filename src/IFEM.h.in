// $Id$
//==============================================================================
//!
//! \file IFEM.h
//!
//! \date Aug 08 2012
//!
//! \author Arne Morten Kvarving / SINTEF
//!
//! \brief Initialization of the IFEM library.
//!
//==============================================================================

#ifndef _IFEM_H_
#define _IFEM_H_

#define IFEM_VERSION_MAJOR @IFEM_VERSION_MAJOR@ //!< Major library version
#define IFEM_VERSION_MINOR @IFEM_VERSION_MINOR@ //!< Minor library version
#define IFEM_VERSION_PATCH @IFEM_VERSION_PATCH@ //!< Patch library version

#include "SIMoptions.h"
#include "ControlFIFO.h"


#ifndef NDEBUG 
#include "ScopedLogger.h"
#define SCOPED_LOG ScopedLogger no_conflict_logger(__PRETTY_FUNCTION__);
#else
#define SCOPED_LOG
#endif


class IFEM
{
public:
  //! \brief Initializes the IFEM library.
  //! \param argc The number of command-line arguments
  //! \param argv The command-line arguments
  //! \return The MPI process ID
  static int Init(int argc, char** argv);

  static void applyCommandLineOptions(SIMoptions& opt);
  static SIMoptions& getOptions() { return cmdOptions; }

  //! \brief Register a fifo instruction callback
  //! \brief callback The callback to register
  static void registerCallback(ControlCallback& callback)
  { 
    fifo.registerCallback(callback);
  }

  //! \brief Poll the control fifo for instructions
  static void pollControllerFifo() { fifo.poll(); }
protected:
  static SIMoptions cmdOptions; //!< General input options
  static int argc;              //!< The number of command-line arguments
  static char** argv;           //!< The command-line arguments
  static ControlFIFO fifo;      //!< Control fifo helper class
};

#endif
