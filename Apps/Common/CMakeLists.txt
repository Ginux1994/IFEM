PROJECT(CommonIFEM)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

# Add local modules
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}
                      ${PROJECT_SOURCE_DIR}/../../cmake/Modules
                      $ENV{HOME}/cmake/Modules)

# Required defines
SET(CMAKE_CXX_FLAGS "-DReal=double -DPROFILE_LEVEL=3")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DINDEX_CHECK=2")
IF(VERBOSE_DEBUG GREATER 0)
  SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DINT_DEBUG=${VERBOSE_DEBUG}")
ENDIF(VERBOSE_DEBUG GREATER 0)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT CMAKE_BUILD_TYPE)

# Required packages
IF(NOT IFEM_CONFIGURED)
  FIND_PACKAGE(IFEM REQUIRED)
ENDIF(NOT IFEM_CONFIGURED)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${IFEM_CXX_FLAGS}")
INCLUDE_DIRECTORIES(${IFEM_INCLUDES})

IF(NOT WIN32)
  # Emit position-independent code, suitable for dynamic linking
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
  # Enable all warnings
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
ENDIF(NOT WIN32)

SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

INCLUDE(cmake/UseMultiArch.cmake)

# Common Navier-Stokes application sources
ADD_LIBRARY(CommonIFEM BDF.C
                       Spalding.C
                       StabilizationUtils.C
                       TimeIntUtils.C)
TARGET_LINK_LIBRARIES(CommonIFEM ${IFEM_LIBRARIES})
SET_TARGET_PROPERTIES(CommonIFEM PROPERTIES
                      VERSION ${IFEM_VERSION}
                      SOVERSION ${IFEM_ABI_VERSION})
INSTALL(TARGETS CommonIFEM DESTINATION ${CMAKE_INSTALL_LIBDIR})
FILE(GLOB HEADERS *.h)
INSTALL(FILES ${HEADERS} DESTINATION include/IFEM)
