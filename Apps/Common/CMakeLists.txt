PROJECT(CommonIFEM)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

IF (NOT IFEM_CONFIGURED)
  # Required defines
  SET(CMAKE_CXX_FLAGS "-DReal=double -DPROFILE_LEVEL=3")
  SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DINDEX_CHECK=2")
  IF(VERBOSE_DEBUG GREATER 0)
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DINT_DEBUG=${VERBOSE_DEBUG}")
  ENDIF(VERBOSE_DEBUG GREATER 0)

  IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
  ENDIF(NOT CMAKE_BUILD_TYPE)

  IF(NOT IFEM_BUILD_TYPE)
    SET(IFEM_BUILD_TYPE ${CMAKE_BUILD_TYPE})
  ENDIF(NOT IFEM_BUILD_TYPE)
  IF(${CMAKE_BUILD_TYPE} MATCHES "Release-MPI")
    SET(CMAKE_BUILD_TYPE Release)
  ELSEIF(${CMAKE_BUILD_TYPE} MATCHES "Debug-MPI")
    SET(CMAKE_BUILD_TYPE Debug)
  ELSEIF(${CMAKE_BUILD_TYPE} MATCHES "Nopt")
    SET(CMAKE_BUILD_TYPE Debug)
  ENDIF(${CMAKE_BUILD_TYPE} MATCHES "Release-MPI")

  # Add local modules
  set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}
                        ${PROJECT_SOURCE_DIR}/../../cmake/Modules
                        $ENV{HOME}/cmake/Modules)

# Required packages
  FIND_PACKAGE(IFEM REQUIRED)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${IFEM_CXX_FLAGS}")
  INCLUDE_DIRECTORIES(${IFEM_INCLUDES})

  IF(NOT WIN32)
    # Emit position-independent code, suitable for dynamic linking
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
    # Enable all warnings
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
  ENDIF(NOT WIN32)
ENDIF(NOT IFEM_CONFIGURED)

SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

# Common Navier-Stokes application sources
ADD_LIBRARY(CommonIFEM STATIC
                       StabilizationUtils.C
                       TimeIntUtils.C)
